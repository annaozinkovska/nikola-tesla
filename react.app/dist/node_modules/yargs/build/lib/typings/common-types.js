var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

export function assertNotStrictEqual(actual, expected, shim, message) {
    shim.assert.notStrictEqual(actual, expected, message);
}
export function assertSingleKey(actual, shim) {
    shim.assert.strictEqual(typeof actual === 'undefined' ? 'undefined' : _typeof(actual), 'string');
}
export function objectKeys(object) {
    return Object.keys(object);
}